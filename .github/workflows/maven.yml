name: API Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

env:
  API_BASE_URL: http://localhost:8080
  API_PATH: /api

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Amazon Corretto 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            target/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Docker
        uses: docker/setup-buildx-action@v2

      - name: Start Docker Compose
        run: |
          docker compose up --build -d
          docker ps -a

      - name: Wait for API to be ready
        run: |
          echo "Waiting for API to start..."
          for i in {1..30}; do
            if curl -s "${{ env.API_BASE_URL }}${{ env.API_PATH }}/getAll" >/dev/null; then
              echo "API is ready after $((i*5)) seconds"
              exit 0
            fi
            sleep 5
          done
          echo "API failed to start within 150 seconds"
          exit 1

      - name: Run tests with Allure
        run: mvn clean test -B

      - name: Prepare Allure results
        if: always()
        run: |
          mkdir -p allure-results
          [ -d target/allure-results ] && cp -r target/allure-results/* allure-results/

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results/
          retention-days: 1

      - name: Stop containers
        if: always()
        run: |
          docker compose down -v --remove-orphans
          docker system prune -a -f